function [S,x] = KalmanFilter(S,z,u)
%卡尔曼滤波器,是一种高效率的递归滤波器（自回归滤波器).
% 动态系统中从不完全及包含噪声的测量中,根据统计特性迭代估计当前最佳状态.
% 调用方式:
%   S = KalmanFilter; %创建滤波器迭代对象
%   [S,x] = KalmanFilter(S,randn); %更新观测值,返回迭代对象,估计结果.
%
% 动态系统必须符合如下条件:
%   - 迭代关系
%         x=S.A*S.x+S.B*u+w     w是期望=0,方差=S.Q 的过程噪声
%   - 观测关系
%         z=S.H*x+v             v是期望=0,方差=S.R 的测量噪声
%   x 为真实状态
%   S.x是状态估计. z是观测列向量. u是可选的额外驱动,默认为0.
%   S.A,S.B,S.H都是相应的变换矩阵,默认值为1.
%   S.Q是过程噪声的方差,S.R是测量噪声的方差,默认都是0.
%   S.P是当前的误差方差,在迭代过程中将努力保持最小值.
%
if nargin == 0 %创建对象
    if nargout > 1; error('Redundant output parameters'); end
    S.x=nan; S.A=1; S.B=1; S.Q=0;
    S.H=1; S.R=0;
    S.P=nan;
    return;
elseif nargin < 2
    error('Insufficient input parameters')
elseif nargin < 3
    u = 0;
end
if isnan(S.x) % 首次迭代,赋初值
    S.x = inv(S.H)*z;
    S.P = inv(S.H)*S.R*inv(S.H');
else
    S.x = S.A*S.x + S.B*u; %先验估计
    S.P = S.A * S.P * S.A' + S.Q; %先验误差方差
    K = S.P*S.H'*inv(S.H*S.P*S.H'+S.R); %Kalman增益
    S.x = S.x + K*(z-S.H*S.x);%后验估计
    S.P = S.P - K*S.H*S.P; %后验误差方差
end
x = S.x;
return
%===============================================================================
%模型:
%    设x,u,w,z,v为随机变量
%        x[n]=A*x[n-1]+B*u[n]+w[n]         w ~ N(0, Q)
%        z[n]=H*x[n]+v[n]                  v ~ N(0, R)
%    其中
%        x[n],u[n],w[n]是r维列向量, z[n],v[n]是c维列向量 
%
%    x[n] 是状态列向量，包含所有状态量（如：位移、速度）
%    u[n] 是驱动输入列向量，如运动过程是通过受力驱动产生加速度，所以u[n]和受力有关
%    A    是状态转移r维方阵，其隐含指示了"n-1时刻的状态会影响到n时刻的状态(这似乎和马尔可夫过程有些类似)"
%    B    是控制输入r维方阵，其隐含指示了"n时刻给的驱动如何影响n时刻的状态"
%         从运动的角度，很容易理解：小车当前n时刻的位移和速度一部分来自于n-1时刻的惯性作用，这通过A*x[n-1]来度量
%         另一部分来自于现在n时刻小车新增加的外部受力，通过B*u[n]来度量。
%
%    w[n] 是过程噪声, 符合高斯分布 N(0,Q)
%    z[n] 就是观测结果
%    H    是状态列向量到观测空间转换矩阵,维数[c,r]
%    v[n] 是测量噪声,符合高斯分布 N(0,R)
%
%    过程噪声w[n],测量噪声v[n]是使用卡尔曼滤波器时两个重要的量
%--------------------------------------------------------------------
%算法:
%    设前次估算:     x[n-1|n-1], P[n-1|n-1] 为r维列向量
%    先验估计:       x[n|n-1] = A*x[n-1|n-1]+B*u[n]
%    先验误差方差:   P[n|n-1] = A*P[n-1|n-1]*A'+ Q
%
%    Kalman增益:         K[n] = P[n|n-1]*H' / (H*P[n|n-1]*H'+ R), 维数[r,c]
%    残差:        Residul[n]  = z[n] - H * x[n|n-1],为c维列向量
%
%    后验估计:        x[n|n]  = x[n|n-1] + K[n]*Residul[n]
%    后验误差方差:    P[n|n]  = (1-K[n]H)*P[n|n-1]
%
%    x[n|n]和P[n|n]为当前最优估算,用于下次迭代
%--------------------------------------------------------------------
%推导:
%    令后验估计:      x[n|n]  = x[n|n-1] + K[n]*Residul[n]
%    后验误差方差(对称r维方阵):
%                    P[n|n] = var(x[n]-x[n|n])
%                           = var(x[n]-(x[n|n-1] + K[n]*(H*x[n]+v[n] - H * x[n|n-1]))
%                           = var((1-K[n]*H)(x[n]-x[n|n-1]) - K[n]*v[n])
%    求最佳Kalman增益 K[n]
%    ----------------------------------------------------------------
%    由方差性质:
%            var(a-b)=var(a)+var(b)-2cov(a,b), 其中
%            a = (1-K[n]*H)(x[n]-x[n|n-1]),
%            b = K[n]*v[n]
%    因v[n]与x[n]相对独立,故协方差
%            cov(a,b)=0
%        P[n|n] = (1-KH)*var(x[n]-x[n|n-1])*(1-KH)'+K*var(v[n])*K'
%               = (1-KH)*P[n|n-1]*(1-KH)' + KRK'
%               = (1-KH)*P[n|n-1]*(1-H'K') + KRK',   
%
%    令 P=P[n|n-1], S=HPH'+R,
%       P为对称r维方阵. KH,(PH'K'-KHP), KSK'都是r维方阵. R和S都是对称c维方阵
%        P[n|n] = (P-KHP)(1-H'K') + KRK'
%               = P - PH'K' - KHP + KSK' 
%    ----------------------------------------------------------------
%    表明 P[n|n] 是 K 的二次函数, 存在极小值,对K求导数,且为0时达到最优值
%    由矩阵求导公式得
%        diff(P[n|n], K) = 0 - (PH'+P'H') + KS+KS'
%    由对称阵性质, P'H'=PH', KS = KS' 都是维数[r,c]
%    令
%        0 = diff(P[n|n], K) = - 2PH' + 2KS
%    则
%        K = PH'/S,
%        P[n|n] = (1-KH)*P[n|n-1]
%
%    求先验误差方差
%    P[n|n-1] = var(x[n]-x[n|n-1])
%             = var(A(x[n-1]-x[n-1|n-1])+w[n])
%             = A*var(x[n-1]-x[n-1|n-1])*A‘ + var(w[n]) 由方差性质和w是独立的过程噪声  
%             = A*P[n-1|n-1]*A' + Q
%--------------------------------------------------------------------
%WEBRTC 拥塞检测的代码中对应值:
%
%   状态转移矩阵:            A = 1
%   控制输入矩阵:            B = 0
%   过程噪声的方差:          Q = 0
%
%   前次最优估计:   x[n-1|n-1] = [_slope, _offset]'
%
%   观测值:               z[n] = tTsDelta
%   观测噪声的方差:          R = _varNoise
%   观测矢量:                H = [fsDelta, 1]
%   后验误差方差:           _E
%--------------------------------------------------------------------
%WEBRTC 拥塞检测中的物理意义:
%   z[n]=H*x[n]+v[n] 即如下
%   tTsDelta = fsDelta * _slope + _offset;
%   tTsDelta 是 接收间隔 与 发送间隔 的增量(观测值)
%
%   fsDelta  是 数据包 增量
%
%当 fsDelta不变时,若tTsDelta变大,则_offset 变大, 则拥塞
